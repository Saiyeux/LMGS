# Hybrid SLAM Main Configuration
# 主配置文件 - 整合EfficientLoFTR + PnP + MonoGS

inherit_from: 'base/hybrid_slam_base.yaml'

# Project settings
project_name: 'Hybrid SLAM System'
version: '1.0.0'
description: 'EfficientLoFTR + OpenCV PnP + MonoGS Fusion SLAM'

# Runtime settings
mode: 'slam'  # slam, evaluation, benchmark
real_time: true
visualization: true

# Data source configuration
input:
  source: 'dataset'  # dataset, camera, video
  dataset_config: 'configs/datasets/tum_rgbd.yaml'
  
  # For real-time camera input
  camera:
    device_id: 0
    resolution: [640, 480]
    fps: 30

# Output configuration
output:
  save_trajectory: true
  save_pointcloud: true
  save_mesh: false
  save_video: true
  save_metrics: true
  
  formats:
    trajectory: ['tum', 'kitti']
    pointcloud: ['ply', 'pcd']
    
# System integration settings
integration:
  # Pipeline stages
  stages:
    - 'feature_matching'      # EfficientLoFTR
    - 'geometric_solving'     # PnP with RANSAC
    - 'rendering_optimization' # MonoGS tracking
    - 'mapping_update'        # MonoGS backend
  
  # Fallback strategies
  fallback_order:
    - 'hybrid'          # Feature + Rendering
    - 'feature_only'    # Pure feature matching
    - 'rendering_only'  # Pure MonoGS tracking
    - 'motion_model'    # Constant velocity model

# Quality control
quality_control:
  min_tracking_confidence: 0.3
  max_reprojection_error: 5.0
  tracking_lost_recovery: true
  loop_closure_detection: true

# Performance targets
performance_targets:
  target_fps: 20
  max_memory_gb: 8
  max_gpu_memory_gb: 6

# Experimental features
experimental:
  enable_uncertainty_estimation: false
  enable_semantic_features: false
  enable_dynamic_objects: false