# Hybrid SLAM - 双摄像头实时重建配置
# 用于双摄像头实时立体SLAM

inherit_from: 'base/hybrid_slam_base.yaml'

# 项目设置
project_name: 'Hybrid SLAM - Stereo Camera'
version: '1.0.0'
description: 'Real-time stereo reconstruction using dual cameras'

# 运行模式
mode: 'slam'  # slam, evaluation, benchmark
real_time: true
visualization: true
device: 'cuda'  # cuda, cpu

# 输入数据源配置
input:
  source: 'camera'  # camera, dataset, video
  
  # 双摄像头配置
  camera:
    left_device: 0      # 左摄像头设备ID
    right_device: 1     # 右摄像头设备ID
    resolution: [640, 480]  # [width, height]
    fps: 30
    
    # 相机标定文件（如果没有将使用默认参数）
    calibration_file: 'stereo_calibration.json'
    
    # 摄像头特定参数
    auto_exposure: true
    brightness: 0.5
    contrast: 0.5
    saturation: 0.5

# 输出配置
output:
  save_trajectory: true
  save_pointcloud: false
  save_mesh: false
  save_video: false
  save_metrics: true
  save_keyframes: false  # 每10帧保存一次关键帧
  
  formats:
    trajectory: ['tum', 'kitti']
    pointcloud: ['ply']

# 前端配置
frontend:
  device: 'cuda'
  min_matches: 50
  min_inliers: 20
  feature_confidence: 0.2
  tracking_lost_threshold: 10
  
  # 立体视觉特定参数
  enable_stereo_constraints: true
  stereo_y_tolerance: 2.0
  max_disparity: 128

# EfficientLoFTR 特征匹配配置
EfficientLoFTR:
  # 模型文件路径（相对于项目根目录）
  model_path: 'thirdparty/EfficientLoFTR/weights/eloftr_outdoor.ckpt'
  
  # 图像预处理
  resize_to: [640, 480]  # [width, height]
  match_threshold: 0.2
  max_keypoints: 2048
  
  # 立体匹配特定参数
  enable_stereo_constraints: true
  max_disparity: 128
  stereo_y_tolerance: 2.0

# PnP 求解器配置
PnPSolver:
  pnp_method: 'SOLVEPNP_ITERATIVE'  # SOLVEPNP_ITERATIVE, SOLVEPNP_EPNP, SOLVEPNP_P3P
  pnp_ransac_threshold: 2.0
  pnp_min_inliers: 20
  pnp_max_iterations: 1000
  pnp_confidence: 0.99
  
  # 立体视觉特定参数
  use_stereo_constraints: true
  stereo_baseline: 0.1  # 基线距离(m)
  depth_scale: 1000.0   # 深度图缩放因子
  
  # 位姿估计参数
  use_initial_pose: true
  pose_refinement_iterations: 10

# 立体视觉处理配置
stereo_processing:
  # 立体匹配算法
  stereo_algorithm: 'BM'  # BM, SGBM
  
  # BM参数
  num_disparities: 64    # 必须是16的倍数
  block_size: 15         # 必须是奇数，通常3-15
  
  # SGBM参数（如果使用SGBM）
  min_disparity: 0
  uniqueness_ratio: 10
  speckle_window_size: 100
  speckle_range: 32
  disp12_max_diff: 1
  
  # 深度计算
  depth_scale_factor: 1.0
  min_depth: 0.1
  max_depth: 50.0

# MonoGS 渲染优化配置（如果集成）
monogs:
  # MonoGS 特定配置
  use_gui: false
  save_results: true
  eval_rendering: false
  
  # 高斯参数
  sh_degree: 3
  resolution: -1
  white_background: false
  data_device: "cuda"
  eval: false

# 可视化配置
visualization_config:
  window_size: [1200, 800]
  show_trajectory: true
  show_pointcloud: true
  max_trajectory_points: 1000
  
  # 保存模式配置（解决GUI阻塞问题）
  save_mode: true
  save_dir: "visualization_output"
  save_frequency: 5  # 每5帧保存一次
  
  # 图像显示
  show_left_image: true
  show_right_image: true
  show_depth_map: true
  show_tracking_info: true

# 性能目标
performance_targets:
  target_fps: 20
  max_memory_gb: 8
  max_gpu_memory_gb: 6

# 质量控制
quality_control:
  min_tracking_confidence: 0.3
  max_reprojection_error: 5.0
  tracking_lost_recovery: true
  loop_closure_detection: false  # 暂不启用

# 系统集成设置
integration:
  # 管道阶段
  stages:
    - 'stereo_capture'         # 双摄像头同步采集
    - 'stereo_rectification'   # 立体校正（如果需要）
    - 'feature_matching'       # EfficientLoFTR特征匹配
    - 'stereo_matching'        # 立体匹配计算深度
    - 'geometric_solving'      # PnP位姿求解
    - 'rendering_optimization' # MonoGS渲染优化（如果启用）
    - 'mapping_update'         # 地图更新
  
  # 回退策略
  fallback_order:
    - 'stereo_feature'     # 立体特征匹配
    - 'monocular_feature'  # 单目特征匹配
    - 'stereo_dense'       # 立体密集匹配
    - 'motion_model'       # 运动模型预测

# 调试和日志设置
debug:
  enable_debug_output: false
  save_debug_images: false
  log_level: 'INFO'  # DEBUG, INFO, WARNING, ERROR
  
  # 性能分析
  enable_profiling: false
  profile_output_file: 'performance_profile.json'

# 实验性功能
experimental:
  enable_uncertainty_estimation: false
  enable_semantic_features: false
  enable_dynamic_objects: false
  enable_loop_closure: false
  use_imu_data: false